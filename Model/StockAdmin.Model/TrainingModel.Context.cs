//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockAdmin.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TrainingEntities : DbContext
    {
        public TrainingEntities()
            : base("name=TrainingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<CustomersBig> CustomersBigs { get; set; }
        public virtual DbSet<ItemsBig> ItemsBigs { get; set; }
        public virtual DbSet<OrdersBig> OrdersBigs { get; set; }
        public virtual DbSet<ProductsBig> ProductsBigs { get; set; }
    
        public virtual ObjectResult<CustomersBig> GetCustomersPaged(Nullable<int> pagenumber, Nullable<int> pagesize)
        {
            var pagenumberParameter = pagenumber.HasValue ?
                new ObjectParameter("pagenumber", pagenumber) :
                new ObjectParameter("pagenumber", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomersBig>("GetCustomersPaged", pagenumberParameter, pagesizeParameter);
        }
    
        public virtual ObjectResult<CustomersBig> GetCustomersPaged(Nullable<int> pagenumber, Nullable<int> pagesize, MergeOption mergeOption)
        {
            var pagenumberParameter = pagenumber.HasValue ?
                new ObjectParameter("pagenumber", pagenumber) :
                new ObjectParameter("pagenumber", typeof(int));
    
            var pagesizeParameter = pagesize.HasValue ?
                new ObjectParameter("pagesize", pagesize) :
                new ObjectParameter("pagesize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomersBig>("GetCustomersPaged", mergeOption, pagenumberParameter, pagesizeParameter);
        }
    }
}
